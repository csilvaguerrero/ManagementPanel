@model PagedList.IPagedList<managementPanel.Models.Usuarios>

@using managementPanel.Models
@using PagedList.Mvc
@using PagedList;

@{
    ViewBag.Title = "Listar Usuarios";
    if (TempData["msj"] != null)
    {
        <script>alert("Error - Usuario no se ha modificado");</script>
    }

    DB_ManagementEntities contexto = new DB_ManagementEntities();

    List<Proyectos> proyectos = contexto.Proyectos.ToList();

    var pageNumber = ViewBag.pageNumber ?? 1;
    var pageSize = ViewBag.pageSize ?? 5;

    var pagedList = new StaticPagedList<Usuarios>(Model, pageNumber, pageSize, Model.Count);

    int proyectosAsig = 0;
}


<h2 class="titulosTabla">Listar Usuarios</h2>

@if (Model.Count > 0)
{
    <div class="cajaTablas">
        <table class="table">
            <thead>
                <tr class="headTabla">
                    <th>Nombre</th>
                    <th>Apellidos</th>
                    <th>Equipo</th>
                    <th>Usuario</th>
                    <th>Rol</th>
                    <th>Perfil</th>
                    @if (((Usuarios)Session["usuario"]).Usuario.Equals("admin"))
                    {
                        <th>Editar</th>
                        <th>Eliminar</th>
                    }
                </tr>
            </thead>
            <tbody id="misUsuarios">

                @foreach (var usuario in Model)
                {
                    foreach (Proyectos p in proyectos)
                    {
                        if (usuario.Usuario.Equals(p.JefeProyecto))
                        {
                            proyectosAsig++;
                        }
                    }
                    <tr class="hoverTabla">
                        <td>@usuario.Nombre</td>
                        <td>@usuario.Apellidos</td>

                        @if (usuario.Equipos.Count == 0)
                        {
                            <td>Sin equipo</td>
                        }
                        else
                        {
                            if (usuario.Equipos.Count == 1)
                            {
                                <td>
                                    @foreach (Equipos e in usuario.Equipos)
                                    {
                                        @e.Nombre
                                    }
                                </td>
                            }
                            else
                            {
                                <td>
                                    <div class="content-select">
                                        <select>
                                            <option value="" disabled selected>EQUIPOS...</option>
                                            @foreach (Equipos e in usuario.Equipos)
                                            {
                                                <option disabled>@e.Nombre</option>
                                            }
                                        </select>
                                    </div>
                                </td>
                            }
                        }


                        <td>@usuario.Usuario</td>
                        @if (usuario.Admin == true)
                        {
                            <td>Administrador</td>
                        }
                        @if (usuario.Admin == false)
                        {
                            <td>Técnico</td>
                        }
                        @if (usuario.Consultor == true)
                        {
                            <td>Consultor</td>
                        }

                        <td><a href="@Url.Action("verPerfil", "Usuario", new { idUsuario = usuario.IdUsuario, page = pageNumber })" class="btn btn-success"><span class="material-symbols-outlined">visibility</span></a></td>

                        @if (((Usuarios)Session["usuario"]).Usuario.Equals("admin"))
                        {



                            <td>
                                <a href="@Url.Action("Editar", "Usuario", new { IdUsuario = usuario.IdUsuario, page = pageNumber })" class="btn btn-primary"><span class="material-symbols-outlined">edit_square</span></a>
                            </td>

                            <td>
                                @using (Html.BeginForm("Eliminar", "Usuario", FormMethod.Post))
                                {
                                    <input type="hidden" name="borrar" id="borrar" value="" />
                                    <input type="hidden" name="idUsuarioBorrar" id="idUsuarioBorrar" value="" />
                                    <input type="hidden" name="page" id="page" value="@pageNumber" />

                                    <button type="submit" class="btn btn-danger" onclick="event.preventDefault(); confirmacionBorrado(@usuario.IdUsuario, '@usuario.Nombre','@proyectosAsig').then((opcion) => { document.getElementById('borrar').value = opcion; document.querySelector('form').submit(); });"><span class="material-symbols-outlined">delete</span></button>
                                    proyectosAsig = 0;
                                }
                            </td>
                        }
                    </tr>
                }
                <tr class="filaAnadir">
                    @if (((Usuarios)Session["usuario"]).Usuario.Equals("admin"))
                    {
                        <td colspan="8">@Html.ActionLink("+", "Registrar", "Login")</td>
                    }

                </tr>
            </tbody>
        </table>
    </div>

    <div class="pagination-container">
        @Html.PagedListPager(Model, page => Url.Action("ListarUsuarios", "Usuario", new { page, pageSize = ViewBag.pageSize }))
    </div>

    <div id="ediccionUsu">

    </div>
}
else
{
    <h2 class="noDatos">
        No hay usuarios disponibles
        @if (((Usuarios)Session["usuario"]).Usuario.Equals("admin"))
        {
            <span>@Html.ActionLink("+", "Registrar", "Login")</span>
        }
    </h2>
}

@section scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
}

<script>
    function mostrarCont(nombreUsuario) {
        //var uri = '/Login/devolverCont?nomUsuario=' + nombreUsuario;
        var uri='@Url.Action("devolverCont", "Login")';
        $.ajax({
            type: "GET",
            url: uri,
            data: { nomUsuario: nombreUsuario },
            /*contentType: "application/json; charset=utf-8",
            dataType: "json",*/
            success: function (response) {
                alert(response.d);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    }

    function confirmacionBorrado(id, nombre, proyectosAsig) {

        console.log(id)

        return new Promise((resolve) => {
            Swal.fire({
                title: '¿Estás seguro de que deseas borrar el usuario ' + nombre + '?',
                showDenyButton: true,
                showCancelButton: true,
                showConfirmButton: false,
                denyButtonText: 'Borrar',
                cancelButtonText: 'Cancelar',
            }).then((result) => {
                if (result.isDenied) {
                    if (proyectosAsig==0) {
                        Swal.fire('Operación realizada con éxito', '', 'success')
                        resolve('Borrar');
                        let valor = document.getElementById('idUsuarioBorrar');
                        valor.value = id
                    } else {
                        Swal.fire('El usuario no puede borrarse porque tiene proyectos asociados', '', 'error')
                    }
                } else {
                    Swal.fire('Cancelado', '', 'error')
                    resolve('Cancelar');
                }
            })
        });
    }
</script>